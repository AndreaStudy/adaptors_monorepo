'use client';

import Select from '@repo/ui/components/Select/select';
import { useState } from 'react';
import AutoMentoringField from './AutoMentoringFeild';
import WeeklyTimeSlotSelector from './WeeklyTimeSlot';

export interface TimeSlot {
  start: string;
  end: string;
}

export interface FormValues {
  mentoringUUID: string;
  minParticipants: number;
  maxParticipants: number;
  price: number;
  deadline: string;
  timeSlots: Record<string, TimeSlot[]>;
}

const mentoringOptions = [
  { value: '1', label: '자기소개서 멘토링' },
  { value: '2', label: '면접 멘토링' },
  { value: '3', label: '포트폴리오 멘토링' },
  { value: '4', label: '이력서 멘토링' },
];

export default function AutoGeneratedMentoringForm() {
  const [formValues, setFormValues] = useState<FormValues>({
    mentoringUUID: '',
    minParticipants: 1,
    maxParticipants: 1,
    price: 100,
    deadline: '2024-12-31',
    timeSlots: {},
  });
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;

    if (
      name === 'minParticipants' ||
      name === 'maxParticipants' ||
      name === 'price'
    ) {
      setFormValues((prev) => ({
        ...prev,
        [name]: parseInt(value, 10),
      }));
    } else {
      setFormValues((prev) => ({
        ...prev,
        [name]: value,
      }));
    }
  };
  const handleTimeSlotChange = (
    updatedTimeSlots: Record<string, TimeSlot[]>
  ) => {
    setFormValues((prev) => ({
      ...prev,
      timeSlots: updatedTimeSlots,
    }));
  };

  return (
    <form>
      <Select
        name="멘토링"
        options={mentoringOptions}
        defaultValue="1"
        onChange={(value) =>
          setFormValues((prev) => ({
            ...prev,
            mentoringUUID: value, // 선택된 값을 mentoringUUID로 업데이트
          }))
        }
        className="rounded-none border-[0.5px]"
        mainColor="adaptorsBlue"
        hoverColor="adaptorsSkyBlue"
      />
      <AutoMentoringField
        formValues={formValues}
        setFormValues={handleChange}
      />
      <WeeklyTimeSlotSelector
        formValues={formValues}
        handleTimeSlotChange={handleTimeSlotChange}
      />
    </form>
  );
}
